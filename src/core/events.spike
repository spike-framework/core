package spike.core;

import System from spike.core.System;
import Utils from spike.core.Util;
import Log from spike.core.Log;

static class Events {

  /**
   * List of allowed events which can be binded by Spike Framework and compiled by Spike compiler
   */
  allowedEvents: [
    'click',
    'change',
    'keyup',
    'keydown',
    'keypress',
    'blur',
    'focus',
    'dblclick',
    'die',
    'hover',
    'keydown',
//    'mousemove',
//    'mouseover',
//    'mouseenter',
//    'mousedown',
//    'mouseleave',
//    'mouseout',
    'submit',
    'load',
    'unload'
  ],

  __linkReferences: {},

  bindEvents: function(){

    for (var k = 0; k < this.allowedEvents.length; k++) {

        document.addEventListener(this.allowedEvents[k], function(e){

            if(e.target){

                if(e.target.hasAttribute('spike-event')){

                    var eventId = e.target.getAttribute('spike-event-'+e.type+'-link');

                    if(eventId !== null){
                        $this.__linkReferences[eventId](e);
                    }

                }

            }

        }, true);

    }

  },

  linkEvent: function(eventFn){

    var linkId = Utils.hash();
    $this.__linkReferences[linkId] = eventFn;
    return linkId;

  },

}